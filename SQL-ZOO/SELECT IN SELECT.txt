This tutorial looks at how we can use SELECT statements within SELECT statements to perform more complex queries.

name	continent	area	population	gdp
Afghanistan	Asia	652230	25500100	20343000000
Albania	Europe	28748	2831741	12960000000
Algeria	Africa	2381741	37100000	188681000000
Andorra	Europe	468	78115	3712000000
Angola	Africa	1246700	20609294	100990000000
...



01 List each country name where the population is larger than that of 'Russia'.

world(name, continent, area, population, gdp)


SELECT name FROM world
  WHERE population >
     (SELECT population FROM world
      WHERE name='Russia')


---------------------------------------------------------------------------------------------------------------------------------------------------------------------

2.
Show the countries in Europe with a per capita GDP greater than 'United Kingdom'.

SELECT name FROM world 
WHERE (gdp/population) > 
(SELECT gdp/population FROM world
WHERE name = 'United Kingdom')
AND continent = 'Europe'

---------------------------------------------------------------------------------------------------------------------------------------------------------------------

3.

List the name and continent of countries in the continents containing either Argentina or Australia. Order by name of the country


SELECT name, continent FROM world
WHERE continent IN (SELECT continent FROM world
WHERE name IN ('Argentina', 'Australia'))
---------------------------------------------------------------------------------------------------------------------------------------------------------------------


4.
Which country has a population that is more than United Kingdom but less than Germany? Show the name and the population.

SELECT name, population FROM world 
WHERE population > (SELECT population FROM world WHERE name = 'United Kingdom') AND
population < (SELECT population FROM world WHERE name = 'Germany')

---------------------------------------------------------------------------------------------------------------------------------------------------------------------

5.
Germany (population 80 million) has the largest population of the countries in Europe. Austria (population 8.5 million) has 11% of the population of Germany.

Show the name and the population of each country in Europe. Show the population as a percentage of the population of Germany.

The format should be Name, Percentage for example:

SELECT name, 
        CONCAT(FLOOR(100* population/(SELECT Population FROM world WHERE name = 'GERMANY')),
'%')
FROM world
WHERE continent = 'Europe'

---------------------------------------------------------------------------------------------------------------------------------------------------------------------

We can use the word ALL to allow >= or > or < or <=to act over a list. For example, you can find the largest country in the world, by population with this query:


SELECT name
  FROM world
 WHERE population >= ALL(SELECT population
                           FROM world
                          WHERE population>0)


---------------------------------------------------------------------------------------------------------------------------------------------------------------------

06. Which countries have a GDP greater than every country in Europe? [Give the name only.] (Some countries may have NULL gdp values)

SELECT name FROM world WHERE gdp > ALL(SELECT gdp FROM world WHERE gdp > 0 and continent = 'Europe')
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

### CORRELATED OR SYNCHRONIZED SUBQUERY ###


7.
Find the largest country (by area) in each continent, show the continent, the name and the area:

SELECT continent, name, area FROM world x
  WHERE area >= ALL
    (SELECT area FROM world y
        WHERE y.continent=x.continent
          AND area>0)


The above example is known as a correlated or synchronized sub-query.

Using correlated subqueries
A correlated subquery works like a nested loop: the subquery only has access to rows related to a single record at a time in the outer query. The technique relies on table aliases to identify two different uses of the same table, one in the outer query and the other in the subquery.

One way to interpret the line in the WHERE clause that references the two table is “… where the correlated values are the same”.

In the example provided, you would say “select the country details from world where the population is greater than or equal to the population of all countries where the continent is the same”.

---------------------------------------------------------------------------------------------------------------------------------------------------------------------

8. List each continent and the name of the country that comes first alphabetically.

Select  x.continent, x.name
From world x
Where x.name <= ALL (select y.name from world y where x.continent=y.continent)
ORDER BY name

---------------------------------------------------------------------------------------------------------------------------------------------------------------------

9.
Find the continents where all countries have a population <= 25000000. Then find the names of the countries associated with these continents. Show name, continent and population.

SELECT name, continent, population 
FROM world w
WHERE NOT EXISTS (                  -- there are no countries
   SELECT *
   FROM world nx
   WHERE nx.continent = w.continent -- on the same continent
   AND nx.population > 25000000     -- with more than 25M population 
   );



---------------------------------------------------------------------------------------------------------------------------------------------------------------------

10. Some countries have populations more than three times that of all of their neighbours (in the same continent). Give the countries and continents.

SELECT x.name, x.continent
FROM world x
WHERE x.population > ALL(
    SELECT (y.population*3)
    FROM world y
    WHERE x.continent=y.continent
    AND x.name<>y.name
)


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------









